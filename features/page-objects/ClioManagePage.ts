import homePage from '../page-objects/ClioHomePage'

class ClioManagePage {
    // Header elements
    get btnClioMange() { return $('//a[@class="button button--secondary"][text()="Sign in to Clio Manage"]') }
    get titleClioManage() { return $('//h1[@class="card__header"][text()="Sign in to Clio Manage"]') }
    get lblEmail() { return $('//label[text()="Email"]') }
    get inputEmail() { return $('#email') }
    get btnNextPassword() { return $('#next') }
    get emailAutoGenerated() { return $('//div[@class="form-field"]//p') }
    get urlChangeEmail() { return $('//a[text()="Change email"]') }
    get inputPassword() { return $('#password') }
    get btnSign() {return $(`//input[@value="Sign In"]`)}
    get btnCancel() {return $(`//a[@aria-label="Cancel"]`)}
   
    // manage detail - SIDE BAR
    get menuDashboard() { return $('//li[@data-testid="dashboard"]//a') }
    get menuCalendar() { return $('//li[@data-testid="calendars"]//a') }
    get menuTask() { return $('//li[@data-testid="tasks"]//a') }
    get menuMatters() { return $('//li[@data-testid="matters"]//a') }
    get menuContacts() { return $('//li[@data-testid="contacts"]//a') }
    get menuBillings() { return $(`//li[@data-testid="billing"]//a`)} 
    get menuActivities() { return $('//li[@data-testid="activities"]//a') }
    get menuAccounts() { return $('//li[@data-testid="accounts"]//a') }
    get menuDocuments() { return $('//li[@data-testid="documents"]//a') }
    get menuCommunications() { return $('//li[@data-testid="communications"]//a') }
    get menuReports() { return $('//li[@data-testid="reports"]//a') }
    get menuAppIntegrations() { return $('//li[@data-testid="app_integrations"]//a') }
    get menuSettings() { return $('//li[@data-testid="settings"]//a') }
    get menuResourceCenter(){return $(`//a[@data-pendo-id="resource-center"]`)}
    get accountName(){return $(`//span[@x-ref="accountName"]`)}
    get sideBarCollapse(){return $(`//a[@aria-label="Collapse sidebar"]`)}
    get btnNewMatter(){return $(`//button[@aria-label="New matter"]`)}
    get logOut(){return $(`//a[@href="/logout"]`)}

    async navigateToManagePage() {
        await homePage.loginButton.click()
        await this.btnClioMange.click()
    }

    async validateClioManage(){
        await expect(this.titleClioManage).toBeDisplayed()
        await expect(this.lblEmail).toBeDisplayed()
        await expect(this.inputEmail).not.toBeDisabled()
        await expect(this.btnNextPassword).toBeClickable()
    }

    async loginToClioManage(email, password){
        await this.inputEmail.setValue(email)
        await this.btnNextPassword.click()
        
        //validate section password 
        await expect(this.emailAutoGenerated).toHaveText(expect.stringContaining(email))
        await expect(this.urlChangeEmail).toBeDisplayed()
        await this.inputPassword.setValue(password)
        await this.btnSign.click()
    }

    async validateDetailManagePage(){
        await expect(this.menuDashboard).toBeDisplayed()
        await expect(this.menuCalendar).toBeDisplayed()
        await expect(this.menuTask).toBeDisplayed()
        await expect(this.menuMatters).toBeDisplayed()
        await expect(this.menuContacts).toBeDisplayed()
        await expect(this.menuActivities).toBeDisplayed()
        await expect(this.menuBillings).toBeDisplayed()
        await expect(this.menuAccounts).toBeDisplayed()
        await expect(this.menuDocuments).toBeDisplayed()
        await expect(this.menuCommunications).toBeDisplayed()
        await this.menuReports.scrollIntoView()
        await expect(this.menuReports).toBeDisplayed()   
        await expect(this.menuAppIntegrations).toBeDisplayed()
        await expect(this.menuSettings).toBeDisplayed()
        await expect(this.menuResourceCenter).toBeDisplayed()
        await expect(this.accountName).toBeDisplayed()
        await expect(this.sideBarCollapse).toBeDisplayed()
        await this.menuDashboard.scrollIntoView()
    }

    async chooseMenu(param){
        switch (param){
            case 'Dashboard':
                await this.menuDashboard.scrollIntoView()
                await this.menuDashboard.click()
                break;
            case 'Calendar':
                await this.menuCalendar.scrollIntoView()
                await this.menuCalendar.click()
                break;
            case 'Task':
                await this.menuTask.scrollIntoView()
                await this.menuTask.click()
                break;
            case 'Matters':
                await this.menuMatters.scrollIntoView()
                await this.menuMatters.click()
                break;
            case 'Contacts':
                await this.menuContacts.scrollIntoView()
                await this.menuContacts.click()
                break;
            case 'Activities':
                await this.menuActivities.scrollIntoView()
                await this.menuActivities.click()
                break;
            case 'Billing':
                await this.menuBillings.scrollIntoView()
                await this.menuBillings.click()
                break;
            case 'Accounts':
                await this.menuAccounts.scrollIntoView()
                await this.menuAccounts.click()
                break;
            case 'Documents':
                await this.menuDocuments.scrollIntoView()
                await this.menuDocuments.click()
                break;
            case 'Communications':
                await this.menuCommunications.scrollIntoView()
                await this.menuCommunications.click()
                break;
            case 'Reports':
                await this.menuReports.scrollIntoView()
                await this.menuReports.click()
                break;
            case 'App Integrations':
                await this.menuAppIntegrations.scrollIntoView()
                await this.menuAppIntegrations.click()
                break;
            case 'Settings':
                await this.menuSettings.scrollIntoView()
                await this.menuSettings.click()
                break;
            case 'Profile':
                await this.accountName.scrollIntoView()
                await this.accountName.click()
                break;      
        }
    }

    async logOutFromClioManage(){
        await this.chooseMenu('Profile')
        await this.logOut.click()
        await expect(this.logOut).not.toBeDisplayed()
    }
}
export default new ClioManagePage() 